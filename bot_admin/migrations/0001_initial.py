# Generated by Django 4.2.20 on 2025-04-16 14:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BotUser',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('telegram_id', models.BigIntegerField(unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_bot', models.BooleanField()),
                ('language_code', models.CharField(blank=True, max_length=10, null=True)),
                ('chat_id', models.BigIntegerField()),
                ('contact', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('requests_left', models.IntegerField(blank=True, default=10, null=True)),
                ('registration_date', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Пользователь бота',
                'verbose_name_plural': 'Пользователи бота',
                'db_table': 'users',
                'ordering': ['-registration_date'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='Новый чат', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='bot_admin.botuser')),
            ],
            options={
                'verbose_name': 'Чат',
                'verbose_name_plural': 'Чаты',
                'db_table': 'chats',
                'ordering': ['-updated_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('requests', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('duration_days', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('is_subscription', models.BooleanField(default=False)),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('allowed_models', models.CharField(blank=True, max_length=255, null=True)),
                ('max_tokens_per_request', models.IntegerField(blank=True, null=True)),
                ('features', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Тарифный план',
                'verbose_name_plural': 'Тарифные планы',
                'db_table': 'plans',
                'ordering': ['priority', 'price'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('discount_type', models.CharField(choices=[('percent', 'Процент'), ('fixed', 'Фиксированная сумма'), ('requests', 'Бонусные запросы')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bonus_requests', models.IntegerField(default=0)),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('max_usages', models.IntegerField(default=0)),
                ('usages_count', models.IntegerField(default=0)),
                ('allowed_plans', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
                'db_table': 'promo_codes',
                'ordering': ['-created_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserStatistics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('total_requests', models.IntegerField(default=0)),
                ('total_tokens', models.IntegerField(default=0)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('total_payments', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_referrals', models.IntegerField(default=0)),
                ('favorite_model', models.CharField(blank=True, max_length=100, null=True)),
                ('account_level', models.CharField(default='standard', max_length=50)),
                ('user', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='bot_admin.botuser')),
            ],
            options={
                'verbose_name': 'Статистика пользователя',
                'verbose_name_plural': 'Статистика пользователей',
                'db_table': 'user_statistics',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated_at', models.DateTimeField(auto_now_add=True)),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('payment_id', models.CharField(blank=True, max_length=255, null=True)),
                ('price_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_auto_renewal', models.BooleanField(default=False)),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('requests_added', models.IntegerField(default=0)),
                ('discount_applied', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('notes', models.TextField(blank=True, null=True)),
                ('plan', models.ForeignKey(db_column='plan_id', on_delete=django.db.models.deletion.CASCADE, to='bot_admin.plan')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='bot_admin.botuser')),
            ],
            options={
                'verbose_name': 'Подписка пользователя',
                'verbose_name_plural': 'Подписки пользователей',
                'db_table': 'user_plans',
            },
        ),
        migrations.CreateModel(
            name='RequestUsage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('request_type', models.CharField(max_length=50)),
                ('ai_model', models.CharField(max_length=100)),
                ('tokens_used', models.IntegerField(default=0)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('was_successful', models.BooleanField(default=True)),
                ('request_text', models.TextField(blank=True, null=True)),
                ('response_length', models.IntegerField(default=0)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='bot_admin.botuser')),
            ],
            options={
                'verbose_name': 'Использование запроса',
                'verbose_name_plural': 'Использование запросов',
                'db_table': 'request_usage',
                'ordering': ['-request_date'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReferralHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('referral_code', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bonus_requests_added', models.IntegerField(default=0)),
                ('conversion_status', models.CharField(default='registered', max_length=50)),
                ('converted_at', models.DateTimeField(blank=True, null=True)),
                ('referred_user', models.ForeignKey(db_column='referred_user_id', on_delete=django.db.models.deletion.CASCADE, related_name='referral_source', to='bot_admin.botuser')),
                ('referrer', models.ForeignKey(db_column='referrer_id', on_delete=django.db.models.deletion.CASCADE, related_name='referrals_sent', to='bot_admin.botuser')),
            ],
            options={
                'verbose_name': 'История реферралов',
                'verbose_name_plural': 'История реферралов',
                'db_table': 'referral_history',
                'ordering': ['-created_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('referral_code', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='bot_admin.botuser')),
            ],
            options={
                'verbose_name': 'Реферальная ссылка',
                'verbose_name_plural': 'Реферальные ссылки',
                'db_table': 'referrals',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PromoCodeUsage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('requests_added', models.IntegerField(default=0)),
                ('applied_to_plan', models.ForeignKey(blank=True, db_column='applied_to_plan_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot_admin.plan')),
                ('promo_code', models.ForeignKey(db_column='promo_code_id', on_delete=django.db.models.deletion.CASCADE, to='bot_admin.promocode')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='bot_admin.botuser')),
            ],
            options={
                'verbose_name': 'Использование промокода',
                'verbose_name_plural': 'Использования промокодов',
                'db_table': 'promo_code_usages',
                'ordering': ['-used_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='RUB', max_length=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('payment_system', models.CharField(max_length=50)),
                ('payment_id', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=50)),
                ('details', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='bot_admin.botuser')),
                ('user_plan', models.ForeignKey(blank=True, db_column='user_plan_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot_admin.userplan')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
                'db_table': 'payments',
                'ordering': ['-payment_date'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=10)),
                ('content', models.TextField()),
                ('model_used', models.CharField(blank=True, max_length=100, null=True)),
                ('tokens_used', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('chat', models.ForeignKey(db_column='chat_id', on_delete=django.db.models.deletion.CASCADE, to='bot_admin.chat')),
            ],
            options={
                'verbose_name': 'Сообщение чата',
                'verbose_name_plural': 'Сообщения чата',
                'db_table': 'chat_messages',
                'ordering': ['timestamp'],
                'managed': True,
            },
        ),
    ]
